ktor {
    deployment {
        port = 8080
        watch = [ classes ]
        # Optional: environment mode
        # development = true
    }

    application {
        modules = [ com.pistoncontrol.ApplicationKt.module ]
    }

    server {
        # Netty-specific configuration
        engine = "netty"

        # Connector explicitly defines port
        connector {
            port = 8080
            host = "0.0.0.0"  # Ensure accessible from Docker network
        }

        compression {
            minQuality = 0.1
        }
    }

    logging {
        level = INFO
        logback = "classpath:logback.xml"
    }
}

# ────────────────────────────────────────────────
# Database Configuration
# ────────────────────────────────────────────────
database {
    url = "${DATABASE_URL}"
    user = "${DATABASE_USER}"
    password = "${DATABASE_PASSWORD}"
    driver = "org.postgresql.Driver"
    maximumPoolSize = 10
    idleTimeout = 10000
}

# ────────────────────────────────────────────────
# JWT Authentication Configuration
# ────────────────────────────────────────────────
jwt {
    secret = ${?JWT_SECRET}
    issuer = ${?JWT_ISSUER}
    audience = ${?JWT_AUDIENCE}
    realm = "piston-control"
}

# ────────────────────────────────────────────────
# MQTT Broker Configuration
# ────────────────────────────────────────────────
mqtt {
    broker = "${MQTT_BROKER}"
    clientId = "piston-backend"
}

# ────────────────────────────────────────────────
# Health check and monitoring
# ────────────────────────────────────────────────
health {
    endpoint = "/health"
    enabled = true
}

# ────────────────────────────────────────────────
# Timezone and Environment
# ────────────────────────────────────────────────
environment {
    timezone = ${TZ}
    mode = "${ENVIRONMENT:-dev}"
}
